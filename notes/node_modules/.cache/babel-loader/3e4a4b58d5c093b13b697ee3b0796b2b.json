{"ast":null,"code":"var _jsxFileName = \"F:\\\\Project\\\\Notes\\\\notes\\\\src\\\\context\\\\notes\\\\NoteState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport NoteContext from \"./NoteContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NoteState = props => {\n  _s();\n\n  const host = \"http://localhost:5000\";\n  const initialNotes = [];\n  const [notes, noteState] = useState(initialNotes); //Get all notes\n\n  const getAllNotes = async () => {\n    //Api\n    const response = await fetch(`${host}/api/notes/fetchallnotes`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'auth-token': \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjMzMmFkODVlNTc4YzVmMWVkZDA3N2M4In0sImlhdCI6MTY2NDMwMzA2NX0.tP7yGHswDPrZK_gmIvys56TbC_jP42CTsq7Ss4VKkiY\"\n      }\n    });\n    const json = await response.json(); // parses JSON response into native JavaScript objects\n\n    noteState(json);\n  }; // Add a note\n\n\n  const addNote = async (title, description, tag) => {\n    //Api\n    const response = await fetch(`${host}/api/notes/savenotes`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'auth-token': \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjMzMmFkODVlNTc4YzVmMWVkZDA3N2M4In0sImlhdCI6MTY2NDMwMzA2NX0.tP7yGHswDPrZK_gmIvys56TbC_jP42CTsq7Ss4VKkiY\"\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      }) // body data type must match \"Content-Type\" header\n\n    });\n    const json = response.json(); // parses JSON response into native JavaScript objects\n    //Logic\n\n    const note = {\n      \"_id\": \"63458d63f14069f42a9d1014\",\n      \"user\": \"6332ad85e578c5f1edd077c8\",\n      \"title\": title,\n      \"description\": description,\n      \"tag\": tag,\n      \"timeStamp\": \"2022-10-11T15:36:03.865Z\",\n      \"__v\": 0\n    };\n    noteState(notes.concat(note));\n  }; // delete a note\n\n\n  const deleteNote = async id => {\n    //API\n    const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\n      method: \"Delete\",\n      headers: {\n        'Content-Type': 'application/json',\n        'auth-token': \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjMzMmFkODVlNTc4YzVmMWVkZDA3N2M4In0sImlhdCI6MTY2NDMwMzA2NX0.tP7yGHswDPrZK_gmIvys56TbC_jP42CTsq7Ss4VKkiY\"\n      }\n    });\n    const json = response.json();\n    const filterNote = notes.filter(notee => {\n      return notee._id !== id;\n    });\n    noteState(filterNote);\n  }; //edit a note\n\n\n  const editNote = async (id, title, description, tag) => {\n    // Api call\n    const response = await fetch(`${host}/api/notes/updatenot/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'auth-token': \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjMzMmFkODVlNTc4YzVmMWVkZDA3N2M4In0sImlhdCI6MTY2NDMwMzA2NX0.tP7yGHswDPrZK_gmIvys56TbC_jP42CTsq7Ss4VKkiY\"\n      },\n      body: JSON.stringify() // body data type must match \"Content-Type\" header\n\n    });\n    const json = response.json(); // parses JSON response into native JavaScript objects\n\n    let newNote = JSON.parse(JSON.stringify(notes)); //logic\n\n    for (let indx = 0; indx < newNote.length; indx++) {\n      const element = newNote[indx];\n\n      if (element._id === id) {\n        newNote[indx].title = title;\n        newNote[indx].description = description;\n        newNote[indx].tag = tag;\n        break;\n      }\n    }\n\n    note;\n  };\n\n  return /*#__PURE__*/_jsxDEV(NoteContext.Provider, {\n    value: {\n      notes,\n      noteState,\n      addNote,\n      deleteNote,\n      editNote,\n      getAllNotes\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NoteState, \"AfGUUl01bG9uLRQD1oILzInJfJU=\");\n\n_c = NoteState;\nexport default NoteState;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["React","useState","NoteContext","NoteState","props","host","initialNotes","notes","noteState","getAllNotes","response","fetch","method","headers","json","addNote","title","description","tag","body","JSON","stringify","note","concat","deleteNote","id","filterNote","filter","notee","_id","editNote","newNote","parse","indx","length","element","children"],"sources":["F:/Project/Notes/notes/src/context/notes/NoteState.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport NoteContext from \"./NoteContext\";\r\n\r\nconst NoteState = (props) => {\r\n    const host = \"http://localhost:5000\"\r\n    const initialNotes = []\r\n\r\n\r\n    const [notes, noteState] = useState(initialNotes);\r\n\r\n    //Get all notes\r\n    const getAllNotes = async () => {\r\n        //Api\r\n        const response = await fetch(`${host}/api/notes/fetchallnotes`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'auth-token': \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjMzMmFkODVlNTc4YzVmMWVkZDA3N2M4In0sImlhdCI6MTY2NDMwMzA2NX0.tP7yGHswDPrZK_gmIvys56TbC_jP42CTsq7Ss4VKkiY\"\r\n            },\r\n\r\n        });\r\n        const json = await response.json(); // parses JSON response into native JavaScript objects\r\n        noteState(json)\r\n\r\n    }\r\n\r\n    // Add a note\r\n    const addNote = async (title, description, tag) => {\r\n        //Api\r\n        const response = await fetch(`${host}/api/notes/savenotes`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'auth-token': \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjMzMmFkODVlNTc4YzVmMWVkZDA3N2M4In0sImlhdCI6MTY2NDMwMzA2NX0.tP7yGHswDPrZK_gmIvys56TbC_jP42CTsq7Ss4VKkiY\"\r\n            },\r\n            body: JSON.stringify({ title, description, tag }) // body data type must match \"Content-Type\" header\r\n        });\r\n        const json = response.json(); // parses JSON response into native JavaScript objects\r\n        //Logic\r\n        const note = {\r\n            \"_id\": \"63458d63f14069f42a9d1014\",\r\n            \"user\": \"6332ad85e578c5f1edd077c8\",\r\n            \"title\": title,\r\n            \"description\": description,\r\n            \"tag\": tag,\r\n            \"timeStamp\": \"2022-10-11T15:36:03.865Z\",\r\n            \"__v\": 0\r\n        }\r\n        noteState(notes.concat(note))\r\n    }\r\n\r\n    // delete a note\r\n    const deleteNote = async(id) => {\r\n\r\n        //API\r\n\r\n        const response = await fetch(`${host}/api/notes/deletenote/${id}`,{\r\n            method:\"Delete\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'auth-token': \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjMzMmFkODVlNTc4YzVmMWVkZDA3N2M4In0sImlhdCI6MTY2NDMwMzA2NX0.tP7yGHswDPrZK_gmIvys56TbC_jP42CTsq7Ss4VKkiY\"\r\n            },\r\n        });\r\n        const json = response.json()\r\n        const filterNote = notes.filter((notee) => {\r\n            return notee._id !== id\r\n        })\r\n\r\n        noteState(filterNote);\r\n    }\r\n\r\n    //edit a note\r\n    const editNote = async (id, title, description, tag) => {\r\n        // Api call\r\n\r\n        const response = await fetch(`${host}/api/notes/updatenot/${id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'auth-token': \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjMzMmFkODVlNTc4YzVmMWVkZDA3N2M4In0sImlhdCI6MTY2NDMwMzA2NX0.tP7yGHswDPrZK_gmIvys56TbC_jP42CTsq7Ss4VKkiY\"\r\n            },\r\n            body: JSON.stringify() // body data type must match \"Content-Type\" header\r\n        });\r\n        const json = response.json(); // parses JSON response into native JavaScript objects\r\n\r\n        let newNote = JSON.parse(JSON.stringify(notes))\r\n        //logic\r\n        for (let indx = 0; indx < newNote.length; indx++) {\r\n            const element = newNote[indx];\r\n            if (element._id === id) {\r\n                newNote[indx].title = title;\r\n                newNote[indx].description = description;\r\n                newNote[indx].tag = tag;\r\n                break;\r\n            }\r\n        }\r\n\r\n        note\r\n    }\r\n\r\n    return (\r\n\r\n\r\n        <NoteContext.Provider value={{ notes, noteState, addNote, deleteNote, editNote, getAllNotes }}>\r\n            {props.children}\r\n\r\n        </NoteContext.Provider>\r\n    )\r\n}\r\n\r\nexport default NoteState"],"mappings":"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"},"metadata":{},"sourceType":"module"}